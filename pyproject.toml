[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cinefluent"
version = "0.1.0"
description = "Language learning app using bilingual movie subtitles"
readme = "README.md"
requires-python = ">=3.12"
authors = [
    {name = "CineFluent Team"}
]
keywords = ["language-learning", "subtitles", "movies", "bilingual"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "srt==3.5.3",
    "pysubs2==1.6.0",
    "psycopg2-binary==2.9.9",
    "SQLAlchemy==2.0.23",
    "alembic==1.13.1",
    "fastapi==0.104.1",
    "uvicorn[standard]==0.24.0",
    "python-dotenv==1.0.0",
    "pydantic==2.5.0",
    "pydantic-settings==2.1.0",
    "httpx==0.25.2",
    "aiohttp==3.9.1",
    "python-Levenshtein==0.23.0",
    "nltk==3.8.1",
    "python-jose[cryptography]==3.3.0",
    "passlib[bcrypt]==1.7.4",
    "python-multipart==0.0.6",
    "redis==5.0.1",
    "structlog==23.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "black==23.11.0",
    "ruff==0.1.6",
    "pre-commit==3.6.0",
]

[project.scripts]
cinefluent-ingest = "cinefluent.ingest:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["cinefluent*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["cinefluent"]
omit = ["*/tests/*", "*/venv/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.black]
line-length = 100
target-version = ['py312']

[tool.ruff]
line-length = 100
target-version = "py312"
